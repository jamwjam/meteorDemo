2. Database everywhere
	MongoDB
		-Meteor comes in it by default
		-Works both server and client
			-On server, works as you might expect it to
			 but database on client is more pseudo database
		-API written to mimic Mongo API
			-for a custom database that is cached in memory
			 of client
			-Allows you to send subsets of data,
			 to "Publish" the info you want
				-If you only want the user to have access
				 to certain rows
				-If you don't want to send that password
				 columns
		-By putting db on the client, you can feed the db
		 right into HTML page.
3. Setting up a More Complex App
   Meteroite
	-Community created wrapper for Meteor
	-Allows us to use non-core pacages created by other members of meteor
	 community
		-Way to work around limitation and to publish packages on
		 Atmosphere, the Meteor package repository.
	Step 1. Install packages
	     npm install Metorite -g
	     (note need to have a copy of Node and npm installed on your system)

http://net.tutsplus.com/tutorials/javascript-ajax/whats-this-meteor-thing/
http://net.tutsplus.com/tutorials/javascript-ajax/prototyping-with-meteor/
http://stackoverflow.com/questions/8191459/how-to-update-node-js-npm-and-all-other-dependencies
om/creationix/nvm
